[versions]
arrow = "2.0.1"
coroutines = "1.7.3"
kotlin = "2.1.10"
kotest = "5.9.1"
kover = "0.9.1"
detekt = "1.23.7"
ktor = "3.1.0"
logback = "1.5.16"
sqldelight="2.0.2"
testcontainers="1.20.4"
hikari="6.2.1"
postgresql="42.7.5"
kjwt="1.0.0"
kotest-arrow="2.0.0"
kotest-testcontainers="2.0.2"
slugify="3.0.7"
suspendapp="0.4.0"
cohort="2.6.1"
spotless="7.0.2"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
suspendapp = { module = "io.arrow-kt:suspendapp", version.ref = "suspendapp" }
suspendapp-ktor = { module = "io.arrow-kt:suspendapp-ktor", version.ref = "suspendapp" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotest-arrow" }
kotest-arrow-fx = { module = "io.kotest.extensions:kotest-assertions-arrow-fx-coroutines", version.ref = "kotest-arrow" }
kotest-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-html = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
hikari = { module = "com.zaxxer:HikariCP", version.ref="hikari" }
sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref="sqldelight" }
sqldelight-postgresql = { module = "app.cash.sqldelight:postgresql-dialect", version.ref="sqldelight" }
postgresql = { module="org.postgresql:postgresql", version.ref="postgresql" }
kjwt-core = { module="io.github.nefilim.kjwt:kjwt-core", version.ref="kjwt" }
slugify = { module="com.github.slugify:slugify", version.ref="slugify" }
cohort-ktor = { module="com.sksamuel.cohort:cohort-ktor", version.ref="cohort" }
cohort-hikari = { module="com.sksamuel.cohort:cohort-hikari", version.ref="cohort" }

[bundles]
arrow = ["arrow-core", "arrow-fx"]
suspendapp = ["suspendapp", "suspendapp-ktor"]
ktor-server = [
    "ktor-server-core",
    "ktor-server-cors",
    "ktor-server-content-negotiation",
    "ktor-server-defaultheaders",
    "ktor-server-netty",
    "ktor-server-auth",
    "ktor-serialization",
    "ktor-server-resources"
]
ktor-client = [
    "ktor-client-content-negotiation",
    "ktor-client-serialization",
    "ktor-client-resources"
]
kotest = [
    "kotest-assertionsCore",
    "kotest-frameworkEngine",
    "kotest-property",
    "kotest-runnerJUnit5",
    "kotest-arrow",
    "kotest-arrow-fx",
    "kotest-testcontainers"
]
cohort = [
    "cohort-ktor",
    "cohort-hikari"
]

[plugins]
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-assert = { id = "org.jetbrains.kotlin.plugin.power-assert",  version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
